"use strict";
var config, logger, registerCommand, registration, _minifyJS;

config = require('./config');

logger = null;

registration = function(mimosaConfig, register) {
  var e;
  if (mimosaConfig.isMinify) {
    logger = mimosaConfig.log;
    e = mimosaConfig.extensions;
    register(['add', 'update', 'buildFile'], 'afterCompile', _minifyJS, e.javascript);
    return register(['add', 'update', 'buildExtension'], 'beforeWrite', _minifyJS, e.template);
  }
};

_minifyJS = function(mimosaConfig, options, next) {
  var file, _i, _len, _ref;
  _ref = options.files;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    file = _ref[_i];
    file.outputFileText = minify(file.outputFileText);
  }
  return next();
};

registerCommand = function(program, retrieveConfig) {
  return program.command('foo').description("Do something fooey").action(function() {
    return retrieveConfig(false, config(function() {}));
  });
};

module.exports = {
  registration: registration,
  registerCommand: registerCommand,
  defaults: config.defaults,
  placeholder: config.placeholder,
  validate: config.validate
};

//# sourceMappingURL=data:application/json;base64,
